buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'io.microdrive.app'
version '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/plugins-release/" }
}

dependencyManagement {
    final SPRING_CLOUD_VERSION = 'Greenwich.RELEASE'

    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${SPRING_CLOUD_VERSION}"
    }
}

dependencies {
    final POSTGRES_DRIVER_VERSION = '42.2.5'
    final JJWT_VERSION = '0.9.1'
    final JACKSON_DATABIND_VERSION = '2.9.8'
    final MONGODB_REACTIVE_VERSION = '2.0.0.M1'
    final FLYWAY_VERSION = '5.2.4'

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")
    implementation("org.springframework.boot:spring-boot-configuration-processor")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${MONGODB_REACTIVE_VERSION}")
    implementation("org.springframework.security:spring-security-rsa")

    // Spring Cloud dependencies
    implementation("org.springframework.cloud:spring-cloud-config-client")
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')

    implementation("org.postgresql:postgresql:${POSTGRES_DRIVER_VERSION}")
    implementation("io.jsonwebtoken:jjwt:${JJWT_VERSION}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${JACKSON_DATABIND_VERSION}")
    implementation("org.flywaydb:flyway-core:${FLYWAY_VERSION}")

    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
