buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'io.microdrive.auth'
version '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/plugins-release/" }
}

dependencyManagement {
    final SPRING_CLOUD_VERSION = 'Greenwich.RELEASE'

    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${SPRING_CLOUD_VERSION}"
    }
}

dependencies {
    final MONGODB_REACTIVE_VERSION = '2.0.0.M1'
    final EMBED_MONGO_VERSION = '2.1.1'

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-configuration-processor')
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${MONGODB_REACTIVE_VERSION}")
    implementation('org.springframework.security:spring-security-rsa')
    implementation('org.springframework.security:spring-security-jwt')

    // Spring Cloud dependencies
    implementation('org.springframework.cloud:spring-cloud-config-client')
    implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')

    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo:${EMBED_MONGO_VERSION}")
}
